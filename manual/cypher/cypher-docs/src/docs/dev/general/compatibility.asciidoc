[[cypher-compatibility]]
= Compatibility

Cypher is not a static language. New versions introduce new features and sometimes old features get dropped.
Older versions of the language can still be accessed if required.
There are two ways to select which version to use in queries.

. Setting a version for all queries
You can configure your database with the configuration parameter `cypher.default_language_version`, and enter which version you'd like to use (see <<cypher-versions>>).
Every Cypher query will use this version, provided the query hasn't explicitly been configured as described in the next item below.

. Setting a version on a query by query basis
The other way is on a query by query basis.
By simply putting `CYPHER 2.3` at the beginning, that particular query will be executed with the version of Cypher included in Neo4j 2.3.

Below is an example using the `START` clause to access a legacy index:

[source,cypher]
----
CYPHER 2.3
START n=node:nodes(name = "A")
RETURN n
----

